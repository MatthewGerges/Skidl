import os

# Set KiCad environment variables (use forward slashes)

from skidl import *

# Create part templates.
# q = Part(lib="Device.lib", name="Q_PNP_CBE", dest=TEMPLATE, symtx="V")
# q = Part(lib="Device", name="Q_PNP_CBE", dest=TEMPLATE, symtx="V")
# r = Part("Device", "R", dest=TEMPLATE)
r1 = Part('Device', 'R', footprint='Resistor_SMD:R_0805_2012Metric')

r = Part('Device', 'R', footprint='Resistor_SMD:R_0805_2012Metric')
q = Part('Device', name="Q_PNP_CBE", dest=TEMPLATE, symtx="V", footprint='Transistor_Power_Module:ST_SDIP-25L')

# Create nets.
gnd, vcc = Net("GND"), Net("VCC")
a, b, a_and_b = Net("A"), Net("B"), Net("A_AND_B")

# Instantiate parts.
gndt = Part("power", "GND")  # Ground terminal.
vcct = Part("power", "VCC")  # Power terminal.
q1, q2 = q(2)
r1, r2, r3, r4, r5 = r(5, value="10K")

# Make connections between parts.
a & r1 & q1["B", "C"] & r4 & q2["B", "C"] & a_and_b & r5 & gnd
b & r2 & q1["B"]
q1["C"] & r3 & gnd
vcc += q1["E"], q2["E"], vcct
gnd += gndt



generate_svg()


# # Load the symbol library
# lib = SchLib(r'C:/Program Files/KiCad/8.0/share/kicad/symbols/Device.kicad_sym', tool=KICAD8)

# # Create a resistor part (use only the library name and part name, no full path for footprint)
# r1 = Part('Device', 'R', footprint='Resistor_SMD:R_0805_2012Metric')
# r2 = Part('Device', 'R', footprint='Resistor_SMD:R_0805_2012Metric')

# r1.value = '100'
# r2.value = '220'

# gnd = Net('GND')
# vin = Net('VIN')

# gnd += r1[1]
# gnd += r2[1]

# vin += r1[2], r2[2]

# # Generate the netlist (output file named video.net)
# generate_netlist(file_='video.net')